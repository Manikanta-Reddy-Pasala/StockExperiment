services:
  # PostgreSQL database
  database:
    image: postgres:15
    container_name: trading_system_db
    environment:
      POSTGRES_DB: trading_system
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: trader_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - trading_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d trading_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Trading system application
  trading_system:
    build: .
    container_name: trading_system_app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://trader:trader_password@database:5432/trading_system
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - FYERS_CLIENT_ID=${FYERS_CLIENT_ID:-your_client_id}
      - FYERS_ACCESS_TOKEN=${FYERS_ACCESS_TOKEN:-your_access_token}
    ports:
      - "5001:5001"
    volumes:
      - ./logs:/app/src/data/logs
    restart: unless-stopped
    networks:
      - trading_network
    command: python run.py --multi-user

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: trading_system_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - trading_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  trading_network:
    driver: bridge